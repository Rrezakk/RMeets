@page
@using RMeets.Enums
@using RMeets.Models
@using RMeets.Contexts
@model RMeets.Pages.ViewBlank
@{
    Layout = null;
}
@{
    var showButtons =false;
    var additionalButton =false;
    var showMediaLinkOnMatch = false;
    var showBlank = true;
    var moderatorButtons = false;
    var haveNoBlankSelected = false;
    var choosenBlankBlockedByModerator = false;
    var previousBlankId = Model.previousBlankId;
    var mode = BlankViewMode.Idle;
    var success = true;
    var viewerProfile = Model.ViewerProfile;
    
    var viewerProfileId = viewerProfile?.Id;

    var blank =new Blank();
    var blankProfileId = -1;
    var blankProfile = new Models.Profile();

    if (Model.meeting)
    {
        var nxt = MeetingArranger.GetNextBlankId((int)viewerProfile?.ChosenBlankId,viewerProfile.Id,previousBlankId,Model.ApplicationContext);
        var nextBlankId = nxt.Item1;
        success = nxt.Item2;
        if (success)
        {
            blank = Model.ApplicationContext.Blanks.FirstOrDefault(x => x.Id == nextBlankId);
            blankProfileId = blank.ProfileId;
            blankProfile = blank.Profile;
            previousBlankId = nextBlankId;
        }
    }
    else
    {
        blank = Model.ApplicationContext.Blanks.FirstOrDefault(x => x.Id == Model.blankId);
        blankProfileId = blank.ProfileId;
        blankProfile = Model.ApplicationContext.Profiles.FirstOrDefault(p => p.Id == blankProfileId);
        mode = BlankViewMode.JustView;
        if (Model.moderation)
        {
            mode = BlankViewMode.Moderation;
            goto moderation;
        }
    }
    
    
    

    if (!success)
    {
        mode = BlankViewMode.EndOfBlanks;
    }
    if (viewerProfileId == blankProfileId && viewerProfile?.Id!=null)
    {
        mode = BlankViewMode.Self;
    }
    else
    {
        var match = false;
    
        var reaction = Model.ApplicationContext.Reactions.FirstOrDefault(x=>(x.From.Id == blank.Id && x.To!=null&&  x.To.Id == viewerProfile.ChosenBlankId));
        var reaction2 = Model.ApplicationContext.Reactions.FirstOrDefault(x => (x.From.Id == viewerProfile.ChosenBlankId  && x.To!=null && x.To.Id ==  blank.Id));
        if (reaction!=null)//была какая=то реакция в сторону смотрящего
        {
            if (reaction.ReactionType1 == reaction.ReactionType2 &&reaction.ReactionType1==ReactionTypes.Like)
            {
                match = true;
            }
        }
        else if (reaction2!=null)//была какая=то реакция со стороны смотрящего
        {
            if (reaction2.ReactionType1 == reaction2.ReactionType2&&reaction.ReactionType1==ReactionTypes.Like)
            {
                match = true;
            }
        }

        if (viewerProfile?.ChosenBlankId==null)
        {
            mode = BlankViewMode.HaveNoBlankSelected;
            goto moderation;
        }
        var blankStatus = Model.ApplicationContext.Blanks.Find(viewerProfile.ChosenBlankId)?.BlockedByModerator == true;
        if (blankStatus)
        {
            mode = BlankViewMode.BlockedByModerator;
            
        }
        if (match)
            mode = BlankViewMode.Match;
        else if(mode == BlankViewMode.Idle)
            mode = BlankViewMode.Voting;

        
    }
    moderation:
    
    switch (mode)
    {
        case BlankViewMode.Self:
            additionalButton = true;
            showButtons = false;
            break;
        case BlankViewMode.Voting:
            showButtons = true;
            additionalButton = true;
            break;
        case BlankViewMode.Match:
            additionalButton = true;
            showMediaLinkOnMatch = true;
            showBlank = true;
            moderatorButtons = false;
            haveNoBlankSelected = false;
            break;
        case BlankViewMode.EndOfBlanks:
            additionalButton = false;
            showMediaLinkOnMatch = false;
            showBlank = false;
            break;
        case BlankViewMode.JustView:
            additionalButton = true;
            showMediaLinkOnMatch = false;
            showButtons = false;
            break;
        case BlankViewMode.Moderation:
            additionalButton = false;
            showMediaLinkOnMatch = false;
            showBlank = true;
            moderatorButtons = true;
            break;
            case BlankViewMode.HaveNoBlankSelected:
                additionalButton = false;
                showMediaLinkOnMatch = false;
                showBlank = false;
                moderatorButtons = false;
                haveNoBlankSelected = true;
                break;
                case BlankViewMode.BlockedByModerator:
                    choosenBlankBlockedByModerator = true;
                    break;
    }
}
<!DOCTYPE html>
@if(choosenBlankBlockedByModerator){
    <div>
        <h3>Выбранная вами анкета заблокирована модератором</h3>
        <form method="get">
            <button asp-page="Profile" asp-route-profileId="@Model.ViewerProfile.Id">В профиль</button>
        </form>
    </div>
}
else if (haveNoBlankSelected && mode!=BlankViewMode.Moderation)
{
    <div>
        <h3>Сперва вы должны выбрать или создать анкету в списке ваших анкет</h3>
        <form method="get">
            <button asp-page="Profile" asp-route-profileId="@Model.ViewerProfile.Id">В профиль</button>
        </form>
    </div>
}
else if ( blank.BlockedByModerator==true && mode is BlankViewMode.Voting or BlankViewMode.Match )
{
    <div>
        <p>
            Анкета заблокирована модератором
        </p>
        <form asp-page="ViewBlank" asp-route-profileId="@viewerProfile?.Id" asp-route-meeting="true" asp-route-previousBlankId="@previousBlankId">
            <input type="submit" value="Искать дальше">
        </form>
        <form method="get">
                                    <input type="submit" asp-page="Profile" asp-route-profileId="@viewerProfileId" value="В профиль">
        </form>
    </div>   
}
else if (showBlank)
{
    
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="preconnect" href="https://fonts.googleapis.com"/>
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css"/>
    <link rel="stylesheet" href="~/css/global.css"/>
    <link rel="stylesheet" href="~/css/largeForm.css"/>
    <link rel="stylesheet" href="~/css/view-blank.css"/>
    <title>Blank</title>
</head>
<body>
<div class="wrapper">
    <div class="content">
        <div class="blank">
            <div class="gallery">
                <div class="swiper">
                    <div class="swiper-wrapper">
                        @{
                            //фотки
                            foreach (var photo in blank.Photos)
                            {
                                <div class="swiper-slide">
                                    <img src="@photo.Url" alt=""/>
                                </div>

                            }
                        }
                    </div>
                    <div class="swiper-pagination"></div>
                    <div class="swiper-button-prev"></div>
                    <div class="swiper-button-next"></div>
                </div>
                <div class="actions">
                    @if (showButtons)
                    {
                        <form method="post" asp-page="ViewBlank" asp-page-handler="Like" asp-route-fromId="@viewerProfile?.ChosenBlankId" asp-route-forId="@blank.Id" asp-route-previousBlankId="@previousBlankId">
                            <button>
                                <img class="action" src="assets/like.svg" alt=""/>
                            </button>
                        </form>
                    }
                    @if (additionalButton)
                    {
                        <form method="get">
                            <input type="submit" asp-page="Profile" asp-route-profileId="@viewerProfileId" value="В профиль">
                        </form>
                    }
                    @if (showMediaLinkOnMatch)
                    {
                        <form asp-page="ViewBlank" asp-route-profileId="@viewerProfile?.Id" asp-route-meeting="true" asp-route-previousBlankId="@previousBlankId">
                            <input type="submit" value="Искать дальше">
                        </form>
                    }
                    @if (moderatorButtons)
                                        {
                                            <form method="post" asp-page="Moderator" asp-page-handler="Moderate" asp-route-blankId="@blank.Id" asp-route-moderationResult="true">
                                                <input type="submit" value="Разрешить анкету">
                                            </form>
                                            <form method="post" asp-page="Moderator" asp-page-handler="Moderate" asp-route-blankId="@blank.Id" asp-route-moderationResult="false">
                                                <input type="submit" value="Запретить анкету">
                                            </form>
                                            <form method="get" asp-page="Moderator">
                                                <input type="submit" value="Не модерировать">
                                            </form>
                                        }
                    @if (showButtons)
                    {
                        <form method="post" asp-page="ViewBlank" asp-page-handler="Dislike" asp-route-fromId="@viewerProfile?.ChosenBlankId" asp-route-forId="@blank.Id" asp-route-previousBlankId="@previousBlankId">
                            <button >
                                <img class="action" src="assets/dislike.svg" alt=""/>
                            </button>
                        </form>
                    }
                </div>

                @if (showMediaLinkOnMatch)
                {
                    <div class="match">
                        <h2>Мэтч</h2>
                        <a href="https://@blankProfile?.SocialMediaLink">@blankProfile?.SocialMediaLink</a>
                    </div>
                }
            </div>
            <div class="about">
                @if (blank.BlockedByModerator==true)
                {
                    <h2>@blankProfile?.Name (Заблокирована модератором)</h2>
                }
                else
                {
                    <h2>@blankProfile?.Name</h2>

                }
                <h4>@blankProfile?.Age годиков, @blank?.CurrentGender?.Name</h4>
                <p>@blankProfile?.City?.Name</p>
                <p>@blank?.Description</p>
                <div>
                    <h4>Цель знакомства</h4>
                    <ul>
                        <li>@blank?.Target?.Name</li>
                    </ul>
                </div>
                <div>
                    <h4>Факты</h4>
                    <ul>
                        @foreach (var fact in blank.Facts)
                        {
                            <li>@fact.Name</li>
                        }
                    </ul>
                </div>
                <div>
                    <h4>Интересы</h4>
                    <ul>
                        @foreach (var interest in blank.Interests)
                        {
                            <li>@interest.Name</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
</body>
<script src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"></script>
<script>
    const swiper = new Swiper('.swiper', {
      // Optional parameters
      // direction: 'vertical',
      loop: true,
      autoHeight: true,
      calculateHeight: true,

      // If we need pagination
      pagination: {
        el: '.swiper-pagination',
      },

      // Navigation arrows
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
    });
  </script>
</html>
}
else
{
    <div>
        <p>Вы отреагировали на все доступные анкеты</p>
        <form method="get">
            <input type="submit" asp-page="Profile" asp-route-profileId="@viewerProfileId" value="В профиль">
        </form>
    </div>
}